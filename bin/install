#!/bin/bash

set -e
cd $( dirname $0 )/..

##
# Variables
#
DEBUG=false
IS_NEW_PROJECT=false

##
# Helpers functions
#
execute() {
    if [ "$DEBUG" = true ] ; then
        "$@";
    else
        "$@" > /dev/null 2>&1;

        retval=$?;

        if [ "$retval" -ne 0 ] ; then
            error_message "Return code was not zero but $retval";
        fi
    fi
}

error_message() {
    echo -e "\e[1;31m $@ \e[0m"
}

success_message() {
    echo -e "\e[1;32m $@ \e[0m"
}

info_message() {
    echo -e "\e[1;33m $@ \e[0m"
}

docker() {
    execute docker-compose run --rm "$@";
}

docker_build() {
    execute docker-compose build --pull;
}

prerequisites() {
    if [ "$EUID" -ne 0 ] ; then
        error_message "Please run as root!";
        exit
    fi

    if ! command -v docker-compose &> /dev/null ; then
        error_message "Docker Compose could not be found!";
        exit;
    fi
}

##
# App functions
#
set_permissions() {
    chown "$USER":"$USER" -R src
    chmod 775 -R src/{storage,bootstrap/cache}
    chgrp www-data -R src/{storage,bootstrap/cache}
}

cp_envs() {
    if [ ! -f src/.env ]; then
        cp src/.env.example src/.env
    fi
}

laravel_build() {
    set_permissions

    if [ "$IS_NEW_PROJECT" = false ] ; then
        cp_envs
        docker php artisan key:generate
    fi
}

install() {
    info_message "Building Docker..."
    docker_build

    if [ ! -d src ]; then
        IS_NEW_PROJECT=true
        info_message "Create new Laravel project..."
        docker composer create-project --prefer-dist laravel/laravel .
    else
        info_message "Installing Composer..."
        docker composer install
    fi

    info_message "Installing Yarn..."
    docker node yarn

    info_message "Building assets..."
    docker node yarn prod

    info_message "Building Laravel..."
    laravel_build
}

##
# Main
#
prerequisites
install
